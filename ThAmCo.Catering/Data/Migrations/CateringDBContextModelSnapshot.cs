// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Catering.Data;

#nullable disable

namespace ThAmCo.Catering.Data.Migrations
{
    [DbContext(typeof(CateringDBContext))]
    partial class CateringDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodBooking", b =>
                {
                    b.Property<int>("FoodBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientReferenceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("INTEGER");

                    b.HasKey("FoodBookingId");

                    b.ToTable("FoodBookings");

                    b.HasData(
                        new
                        {
                            FoodBookingId = 1,
                            ClientReferenceId = 101,
                            MenuId = 1,
                            NumberOfGuests = 10
                        },
                        new
                        {
                            FoodBookingId = 2,
                            ClientReferenceId = 102,
                            MenuId = 2,
                            NumberOfGuests = 15
                        },
                        new
                        {
                            FoodBookingId = 3,
                            ClientReferenceId = 103,
                            MenuId = 3,
                            NumberOfGuests = 20
                        },
                        new
                        {
                            FoodBookingId = 4,
                            ClientReferenceId = 104,
                            MenuId = 1,
                            NumberOfGuests = 5
                        },
                        new
                        {
                            FoodBookingId = 5,
                            ClientReferenceId = 105,
                            MenuId = 2,
                            NumberOfGuests = 8
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodItem", b =>
                {
                    b.Property<int>("FoodItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("FoodItemId");

                    b.ToTable("FoodItems");

                    b.HasData(
                        new
                        {
                            FoodItemId = 1,
                            Description = "Cheese and tomato pizza",
                            Name = "Pizza",
                            Price = 12.99
                        },
                        new
                        {
                            FoodItemId = 2,
                            Description = "Spaghetti with marinara sauce",
                            Name = "Pasta",
                            Price = 9.9900000000000002
                        },
                        new
                        {
                            FoodItemId = 3,
                            Description = "Mixed greens with balsamic dressing",
                            Name = "Salad",
                            Price = 5.9900000000000002
                        },
                        new
                        {
                            FoodItemId = 4,
                            Description = "Beef burger with lettuce and tomato",
                            Name = "Burger",
                            Price = 8.9900000000000002
                        },
                        new
                        {
                            FoodItemId = 5,
                            Description = "Carbonated drink",
                            Name = "Soda",
                            Price = 1.99
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FoodBookingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MenuId");

                    b.HasIndex("FoodBookingId");

                    b.ToTable("menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            MenuName = "Vegetarian Delight"
                        },
                        new
                        {
                            MenuId = 2,
                            MenuName = "Italian Feast"
                        },
                        new
                        {
                            MenuId = 3,
                            MenuName = "Classic Burger Meal"
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.MenuFoodItem", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoodMenuId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MenuId", "FoodMenuId");

                    b.HasIndex("FoodMenuId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            FoodMenuId = 3
                        },
                        new
                        {
                            MenuId = 1,
                            FoodMenuId = 4
                        },
                        new
                        {
                            MenuId = 2,
                            FoodMenuId = 1
                        },
                        new
                        {
                            MenuId = 2,
                            FoodMenuId = 2
                        },
                        new
                        {
                            MenuId = 2,
                            FoodMenuId = 5
                        },
                        new
                        {
                            MenuId = 3,
                            FoodMenuId = 4
                        },
                        new
                        {
                            MenuId = 3,
                            FoodMenuId = 5
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.Menu", b =>
                {
                    b.HasOne("ThAmCo.Catering.Data.FoodBooking", null)
                        .WithMany("Menus")
                        .HasForeignKey("FoodBookingId");
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.MenuFoodItem", b =>
                {
                    b.HasOne("ThAmCo.Catering.Data.FoodItem", "FoodItems")
                        .WithMany("MenuFoodItem")
                        .HasForeignKey("FoodMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThAmCo.Catering.Data.Menu", "Menus")
                        .WithMany("Item")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItems");

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodBooking", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodItem", b =>
                {
                    b.Navigation("MenuFoodItem");
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.Menu", b =>
                {
                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
