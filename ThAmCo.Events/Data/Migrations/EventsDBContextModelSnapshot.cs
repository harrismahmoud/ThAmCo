// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Events.Data;

#nullable disable

namespace ThAmCo.Events.Data.Migrations
{
    [DbContext(typeof(EventsDBContext))]
    partial class EventsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ThAmCo.Events.Data.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FoodBookingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReservationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            EventDateTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Tech Conference",
                            EventType = "Conference",
                            FoodBookingId = 0,
                            ReservationId = 0
                        },
                        new
                        {
                            EventId = 2,
                            EventDateTime = new DateTime(2024, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Art Exhibition",
                            EventType = "Exhibition",
                            FoodBookingId = 0,
                            ReservationId = 0
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuestContact")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuestId");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            GuestId = 1,
                            GuestContact = 1234567890,
                            GuestName = "John Doe"
                        },
                        new
                        {
                            GuestId = 2,
                            GuestContact = 12345,
                            GuestName = "Jane Smith"
                        },
                        new
                        {
                            GuestId = 3,
                            GuestContact = 734567589,
                            GuestName = "Alice Johnson"
                        },
                        new
                        {
                            GuestId = 4,
                            GuestContact = 1122334455,
                            GuestName = "Mark Williams"
                        },
                        new
                        {
                            GuestId = 5,
                            GuestContact = 667788990,
                            GuestName = "Emily Davis"
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.GuestBooking", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("guestBookings");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            GuestId = 1
                        },
                        new
                        {
                            EventId = 1,
                            GuestId = 2
                        },
                        new
                        {
                            EventId = 2,
                            GuestId = 3
                        },
                        new
                        {
                            EventId = 2,
                            GuestId = 4
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StaffId");

                    b.ToTable("staffs");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            Email = "alice.brown@company.com",
                            StaffName = "Alice Brown"
                        },
                        new
                        {
                            StaffId = 2,
                            Email = "bob.white@company.com",
                            StaffName = "Bob White"
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staffing", b =>
                {
                    b.Property<string>("StaffRole")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StaffRole", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("staffings");

                    b.HasData(
                        new
                        {
                            StaffRole = "Event Manager",
                            EventId = 1
                        },
                        new
                        {
                            StaffRole = "Security",
                            EventId = 1
                        },
                        new
                        {
                            StaffRole = "Curator",
                            EventId = 1
                        },
                        new
                        {
                            StaffRole = "Security",
                            EventId = 2
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.GuestBooking", b =>
                {
                    b.HasOne("ThAmCo.Events.Data.Event", "Event")
                        .WithMany("GuestBooking")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThAmCo.Events.Data.Guest", "Guest")
                        .WithMany("GuestBooking")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staffing", b =>
                {
                    b.HasOne("ThAmCo.Events.Data.Event", "Event")
                        .WithMany("staffing")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThAmCo.Events.Data.Staff", "Staff")
                        .WithMany("staffing")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Event", b =>
                {
                    b.Navigation("GuestBooking");

                    b.Navigation("staffing");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Guest", b =>
                {
                    b.Navigation("GuestBooking");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staff", b =>
                {
                    b.Navigation("staffing");
                });
#pragma warning restore 612, 618
        }
    }
}
